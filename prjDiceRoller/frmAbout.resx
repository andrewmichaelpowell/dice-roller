<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IRTpCEJc9EhIvA==
</value>
  </data>
</root>